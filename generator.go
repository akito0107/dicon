package dicon

import (
	"bytes"
	"fmt"
	"io"

	"golang.org/x/tools/imports"
)

type Generator struct {
	buf         bytes.Buffer
	PackageName string
}

type Outer interface {
	Out(w io.Writer, filename string) error
}

func (g *Generator) Printf(format string, args ...interface{}) {
	fmt.Fprintf(&g.buf, format, args...)
}

func (g *Generator) Out(w io.Writer, filename string) error {
	src := g.buf.Bytes()
	for i := 0; i < 2; i++ {
		dist, err := imports.Process(filename, src, &imports.Options{Comments: true})
		if err != nil {
			return err
		}
		src = dist
	}

	if _, err := io.Copy(w, bytes.NewReader(src)); err != nil {
		return err
	}
	return nil
}

func (g *Generator) AppendHeader(it *InterfaceType) {
	g.Printf("// Code generated by \"dicon\"; DO NOT EDIT.\n")
	g.Printf("\n")
	g.Printf("package %s\n", g.PackageName)
	g.Printf("\n")
	g.Printf("import (\n")
	g.Printf("\"log\"\n")
	g.Printf("\"github.com/pkg/errors\"\n")
	g.Printf(")\n")
}
